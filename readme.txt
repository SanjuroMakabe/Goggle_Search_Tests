Смысл тест-комплекта:
	проверяет через GUI поиск в Google, отправляя нужный запрос:
		1) выполняет подсчет результатов поиска (больше, либо меньше 10);
		2) проверяет наличие значения 'Кофейная станция Bork C804 - М.Видео' на первой странице результатов, выдает соотв.сообщение.
		3) тесты разделены по папкам, исходя из нужного браузера;
		4) первый тест отправляет запрос "купить кофемашину", проверяя, сколько будет результатов и наличие 'МВидео'.
		5) второй тест вводит запрос "КУПИТЬ КОФЕМАШИНУ BORK C804", проверяя регистрозависимость поиска (большие-маленькие буквы в запросе);
		6) второй тест вводит запрос "купить кофемашину bork c804"
		7) запуск тестов - через файл test_runner.py.

Платформы:
	тест успешно проверен на Windows 10 и на Linux Manjaro

Браузеры:
	может быть запущен на Google Chrome (v96.0.4664.45) и на Mozilla Firefox (v94.0.2)

Для запуска теста нужно:
	(для Windows)
	1) установить на своем ПК python. Загрузить установочник последней версии с оф.сайта: https://www.python.org/downloads/;
	2) установить фреймворк selenium для python: ввести в терминал команду "pip install -U selenium".

	(для Linux)
	1) python, как правило, уже предустановлен в дистрибутивах Linux. Можно это проверить командой "python -V", или "python3 -V" которая покажет установленную версию;
	2) установить фреймворк selenium для python: ввести в терминал команду "pip install -U selenium".

	(далее для всех платформ)
	3) необходимые вебдрайверы Selenium по умолчанию уже имеются в репозитории. Для работы теста репозиторий скачать целиком;
	4) модуль unittest уже предустановлен в python, поэтому делать с ним ничего не нужно;
	5) скачать репозиторий и запустить тест из любой среды: к примеру, для запуска из терминала:
		5.1) ввести команду для перехода в расположение главного файла программы (пример: "cd C:\Users\Nick\Desktop		\Sanjuro");
		5.2) ввести команду "python test_runner.py"

Результаты теста:
	1) в случае успеха сначала скрипт выведет:
***УСПЕХ: ~ [или другое число] - больше 10. Проверяем, есть ли в результатах М.Видео***
	
	либо покажет, что число - меньше.

	затем:
***УСПЕХ. Ссылка на М.Видео найдена на странице.***


	"Ran 3 tests in ~s
	OK"


Поддержка:
	1) отправляемый запрос можно изменить в строке:

	request='купить кофемашину bork c804'

	2) независимо от количества результатов и текста запроса, скрипт преобразует полученную строку с результатом в целое число (удаляя из нее пробелы) и проведет анализ, больше или меньше оно 10.
	3) скрипт проверяет наличие  'Кофейная станция Bork C804 - М.Видео' на первой странице результатов. Если ссылки нет, он сообщит.
	4) 3) тесты м.б. дублированы с изменением данных \ проверок простым копированием. Отключить \ включить их в запуск можно в файле test_runner. Для добавления нового - сначала новый тест импортировать в test_runner (д.б. в одной папке со всеми), например:

"import test4"

затем ниже нужно добавить строку, аналогичную этой:

"BorkTestSuite.addTest(unittest.makeSuite(test4.CoffeeMachine))"

где test4 - название теста, CoffeeMachine - название класса (его также изменить в новом тесте). Запустить.